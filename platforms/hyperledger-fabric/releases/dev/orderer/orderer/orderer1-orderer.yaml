apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: orderer-orderer1
  namespace: orderer-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: orderer-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-dev-test
        namespace: flux-dev-test
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: orderer-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: ordererMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: orderersc
      storagesize: 1Gi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://a3c430e7cb6d24101809f2d08fb11797-1757273231.eu-west-1.elb.amazonaws.com:8200
      role: vault-role
      authpath: dev-testorderer-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/orderer-net/orderers/orderer1.orderer-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIJmS0jpOrrxg6NI1hUkebR4xtHtnChl5bAYi0+m33+xwEt5cCttcCthcCngKWggBEAEaBgiJ
      kfSXBiIKc3lzY2hhbm5lbCpAOTZkN2RlNzYyOTY0NDJhZTdiYTg0YmFmYjI2MDM1YzQ1MzNkZTBk
      NDMyOGVmODYzOGNmNDJkNzE5MmRlYjkzMxIaEhgHHjW82xd9Yuri/yb3iKEmvic/hR/qUUUS21sK
      2FsS1VsSoyoKB09yZGVyZXISlyoSkhYKCm9yZGVyZXJNU1ASgxYanxQKA01TUBKXFBKMFBKJFAoK
      b3JkZXJlck1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lC
      QWdJVU5Hdkwramk4ZzBFQWo3WVpacGZhRE8yUkQrZ3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxk
      REFlRncweQpNakE0TVRjeE5URXhNelZhRncweU5UQTJNRFl4TlRFeE16VmFNRm94Q3pBSkJnTlZC
      QVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN
      QTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdX
      VEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVRLVGg3cjVLRFk5aCtDMjJqRll0UVVI
      KzdXdlRuRHFBdG11RDBnUSt6T0x6Z2hTM2ZIRWdRZjNWeXpkc05oCmxXZjRHNFJTL3FSdkNvNzZI
      YkRJbEFEZ28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw
      akFkQmdOVkhRNEVGZ1FVMU5FQ2hjTDhBTTRPZ2dkcy9tc2FFWjNkNUUwd0NnWUlLb1pJemowRQpB
      d0lEU0FBd1JRSWhBUHZFWjZlaEFNNlVBWTJQdjFYNElQRmNYUld1RlEycmlQUVVZd2tZZ3I0ckFp
      QVRTUFM3Clp3MGk4dW14UlNwVmsrUElsSzdSRk9FaUEvQWRWMGFaYm56OTR3PT0KLS0tLS1FTkQg
      Q0VSVElGSUNBVEUtLS0tLQoikggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzFEQ0NB
      bnVnQXdJQkFnSVVXU21kckl1UUo4L2xUbVcwRlZQUjRWZWtaTWt3Q2dZSUtvWkl6ajBFQXdJdwpX
      akVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH
      OXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzV2Y21SbGNt
      VnlMVzVsZERBZUZ3MHkKTWpBNE1UY3hOVEUxTURCYUZ3MHlNekE0TVRjeE5USXdNREJhTUdneEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERqQU1CZ05WCkJBc1RCV0ZrYldsdU1Sb3dHQVlEVlFRRERC
      RkJaRzFwYmtCdmNtUmxjbVZ5TFc1bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEw
      SUFCTTc2UlZnWVRuTk5udnhzWkVUSDhzbmE5UVdBVHgyYkthMXhpTmcxNXpTYwp3ck5PMmRoR3VF
      RkpuL29ma01oMXlUZytUQWtQQzdjUEh3c2xzQlhMWU5lamdnRVBNSUlCQ3pBT0JnTlZIUThCCkFm
      OEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbGdORHhXZDcwbDllS2Jp
      TDB0YXYKb081NkdTMHdId1lEVlIwakJCZ3dGb0FVMU5FQ2hjTDhBTTRPZ2dkcy9tc2FFWjNkNUUw
      d0l3WURWUjBSQkJ3dwpHb0lZWTJFdGRHOXZiSE10WXpSa1lqZzNOamRpTFhJeWJUbG1NSUdGQmdn
      cUF3UUZCZ2NJQVFSNWV5SmhkSFJ5CmN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdS
      dGFXNGlPaUowY25WbElpd2lhR1l1UVdabWFXeHAKWVhScGIyNGlPaUlpTENKb1ppNUZibkp2Ykd4
      dFpXNTBTVVFpT2lKQlpHMXBia0J2Y21SbGNtVnlMVzVsZENJcwpJbWhtTGxSNWNHVWlPaUpoWkcx
      cGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUI4aHlieG51OXg4MnVDCkV4eStCUVdETmps
      YXYxNFRkWGllM0RobnpQditPZ0lnUTExTC9IVVlsNGNvN3FUSWlmdlJHVmU1MFVWZkl1QjAKdWJx
      aXdjV0FVbzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVU5Hdkwramk4ZzBF
      QWo3WVpacGZhRE8yUkQrZ3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncweQpNakE0TVRj
      eE5URXhNelZhRncweU5UQTJNRFl4TlRFeE16VmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE
      ClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr
      WlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQwpBQVRLVGg3cjVLRFk5aCtDMjJqRll0UVVIKzdXdlRuRHFBdG11RDBn
      USt6T0x6Z2hTM2ZIRWdRZjNWeXpkc05oCmxXZjRHNFJTL3FSdkNvNzZIYkRJbEFEZ28wSXdRREFQ
      QmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV
      MU5FQ2hjTDhBTTRPZ2dkcy9tc2FFWjNkNUUwd0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWhBUHZF
      WjZlaEFNNlVBWTJQdjFYNElQRmNYUld1RlEycmlQUVVZd2tZZ3I0ckFpQVRTUFM3Clp3MGk4dW14
      UlNwVmsrUElsSzdSRk9FaUEvQWRWMGFaYm56OTR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpvcmRlcmVyTVNQEAEa
      BkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCm9yZGVyZXJNU1Aa
      BkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKb3JkZXJlck1TUBoGQWRt
      aW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpvcmRlcmVyTVNQGgZBZG1pbnMq
      BkFkbWlucxoeCgxCYXRjaFRpbWVvdXQSDhIECgIycxoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmlj
      dGlvbnMSCBoGQWRtaW5zGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMa1BEK
      DUNvbnNlbnN1c1R5cGUSwhEStxEKCGV0Y2RyYWZ0EqoRCpMRChRvcmRlcmVyMS5vcmRlcmVyLW5l
      dBCKNxq6CC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDOHpDQ0FwbWdBd0lCQWdJVVU1
      SUpUamp0S3lTdDhpSkRHWWVtUGZHempsWXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJo
      TUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0Rn
      WURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncw
      eQpNakE0TVRjeE5URTFNREJhRncweU16QTRNVGN4TlRJd01EQmFNRzB4Q3pBSkJnTlZCQVlUQWtk
      Q01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5
      eVpHVnlaWEl4RURBT0JnTlYKQkFzVEIyOXlaR1Z5WlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJ
      eExtOXlaR1Z5WlhJdGJtVjBNRmt3RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFSzd3
      elBmK2pkSlNacWZ6U0Vwc1pGWElBN0hLQWVpalZxaFZUCnZCYU9Xem9zRXpwQmtPZnc4MjJabkJp
      bXV0SWFOM0dqWU92SkZWSGRJNE05Y1BHQVJLT0NBU2d3Z2dFa01BNEcKQTFVZER3RUIvd1FFQXdJ
      RHFEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRApWUjBUQVFI
      L0JBSXdBREFkQmdOVkhRNEVGZ1FVNmFXdkFZelpIWnJNRGdsOXVjYkZCZWhUS0VRd0h3WURWUjBq
      CkJCZ3dGb0FVMU5FQ2hjTDhBTTRPZ2dkcy9tc2FFWjNkNUUwd093WURWUjBSQkRRd01vSVViM0pr
      WlhKbGNqRXUKYjNKa1pYSmxjaTF1WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1
      WTI5dE1HZ0dDQ29EQkFVRwpCd2dCQkZ4N0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1
      SWpvaUlpd2lhR1l1Ulc1eWIyeHNiV1Z1CmRFbEVJam9pYjNKa1pYSmxjakV1YjNKa1pYSmxjaTF1
      WlhRaUxDSm9aaTVVZVhCbElqb2liM0prWlhKbGNpSjkKZlRBS0JnZ3Foa2pPUFFRREFnTklBREJG
      QWlFQThFSkFUcXVSbVhPNS9FVVRFNk0vSkNZdlFFVzhjQ1hLeHpsNwpON1pGTHdzQ0lBeVpMZW9i
      SVRLSmc5KzRZbTVWUHhjb3ROb0dyRStYU3p3OExSQnV1VzI5Ci0tLS0tRU5EIENFUlRJRklDQVRF
      LS0tLS0KIroILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4ekNDQXBtZ0F3SUJBZ0lV
      VTVJSlRqanRLeVN0OGlKREdZZW1QZkd6amxZd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVF
      QmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3
      RGdZRFZRUUtEQWRQY21SbGNtVnlNUmN3RlFZRFZRUUREQTVqWVM1dmNtUmxjbVZ5TFc1bGREQWVG
      dzB5Ck1qQTRNVGN4TlRFMU1EQmFGdzB5TXpBNE1UY3hOVEl3TURCYU1HMHhDekFKQmdOVkJBWVRB
      a2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RC
      MDl5WkdWeVpYSXhFREFPQmdOVgpCQXNUQjI5eVpHVnlaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnla
      WEl4TG05eVpHVnlaWEl0Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVL
      N3d6UGYramRKU1pxZnpTRXBzWkZYSUE3SEtBZWlqVnFoVlQKdkJhT1d6b3NFenBCa09mdzgyMlpu
      QmltdXRJYU4zR2pZT3ZKRlZIZEk0TTljUEdBUktPQ0FTZ3dnZ0VrTUE0RwpBMVVkRHdFQi93UUVB
      d0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRB
      UUgvQkFJd0FEQWRCZ05WSFE0RUZnUVU2YVd2QVl6Wkhack1EZ2w5dWNiRkJlaFRLRVF3SHdZRFZS
      MGoKQkJnd0ZvQVUxTkVDaGNMOEFNNE9nZ2RzL21zYUVaM2Q1RTB3T3dZRFZSMFJCRFF3TW9JVWIz
      SmtaWEpsY2pFdQpiM0prWlhKbGNpMXVaWFNDR205eVpHVnlaWEl4TG1SbGRtVnNiM0F1Ykc5allX
      d3VZMjl0TUdnR0NDb0RCQVVHCkJ3Z0JCRng3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFX
      OXVJam9pSWl3aWFHWXVSVzV5YjJ4c2JXVnUKZEVsRUlqb2liM0prWlhKbGNqRXViM0prWlhKbGNp
      MXVaWFFpTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOQpmVEFLQmdncWhrak9QUVFEQWdOSUFE
      QkZBaUVBOEVKQVRxdVJtWE81L0VVVEU2TS9KQ1l2UUVXOGNDWEt4emw3Ck43WkZMd3NDSUF5Wkxl
      b2JJVEtKZzkrNFltNVZQeGNvdE5vR3JFK1hTenc4TFJCdXVXMjkKLS0tLS1FTkQgQ0VSVElGSUNB
      VEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICACBoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCA
      gIAxGICAQBoGQWRtaW5zIioKD0Jsb2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1p
      bnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJ
      CgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMqBkFk
      bWlucxLvLgoLQ29uc29ydGl1bXMS3y4SlC4KGkNhcmJvbkFjY291bnRpbmdDb25zb3J0aXVtEvUt
      EswWCgthdWRpdG9yMk1TUBK8FhrUFAoDTVNQEswUEsEUEr4UCgthdWRpdG9yMk1TUBLtBS0tLS0t
      QkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCL0RDQ0FhS2dBd0lCQWdJVUZteUp0MHBzS0EzajlM
      ODBUclA5ZWE4TnQ1TXdDZ1lJS29aSXpqMEVBd0l3ClhERUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJn
      TlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJFd0R3WURWUVFLREFoQmRX
      UnBkRzl5TWpFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqSXRibVYwTUI0WApEVEl5TURneE56
      RTFNVFF3T0ZvWERUSTFNRFl3TmpFMU1UUXdPRm93WERFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOCkJn
      TlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkV3RHdZRFZRUUtEQWhCZFdS
      cGRHOXkKTWpFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqSXRibVYwTUZrd0V3WUhLb1pJemow
      Q0FRWUlLb1pJemowRApBUWNEUWdBRTNBTGZWZzc0c2I2K0pSZVc5R0g1azB4d0pKZldCZWxvMkdW
      RjcrZ2E3alVkclY5VG9WcXVQeXptCnRJc000dVY0NlhvRmlyWm1FQlppelJzdlFINjJ0S05DTUVB
      d0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZ
      RUZBb09uZ1grdE9DUlJOL05ZajhPakNNeS9uZHFNQW9HQ0NxRwpTTTQ5QkFNQ0EwZ0FNRVVDSVFD
      amFXdzg0akhPZHd0TlpEczBJQnRHSk5YMGFpcVNJcWw5WkNUdktVbCtSZ0lnCkhGN09odnUwYml2
      bnpqTCtnYW9NelRUbytHdHRLODNuSUp4M2g0NG1SVTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KIr4ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5VENDQXB1Z0F3SUJBZ0lVRERZ
      Tmh3aVFyNWdBY05ZaGdDV0g2MXpZWER3d0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhN
      Q1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkV3RHdZ
      RFZRUUtEQWhCZFdScGRHOXlNakVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJtVjBNQjRY
      CkRUSXlNRGd4TnpFMU1qQXdNRm9YRFRJek1EZ3hOekUxTWpVd01Gb3dlekVMTUFrR0ExVUVCaE1D
      UjBJeEd6QVoKQmdOVkJBY1RFalV4TGpVd0x5MHdMakV6TDB4dmJtUnZiakVSTUE4R0ExVUVDaE1J
      UVhWa2FYUnZjakl4SHpBTQpCZ05WQkFzVEJXRmtiV2x1TUE4R0ExVUVDeE1JWVhWa2FYUnZjakl4
      R3pBWkJnTlZCQU1NRWtGa2JXbHVRR0YxClpHbDBiM0l5TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VH
      Q0NxR1NNNDlBd0VIQTBJQUJBVER4RTVCdkpEMzl6aVAKUWlvYUd0V1RQdzVIWisxTWlJdG94aFk2
      Q2xucjhjRkEvQUJJRzl3a3RpbHVCYWhFeG5GUXdIbnc4OXg5VUFjZApSdVJUcVgyamdnRWFNSUlC
      RmpBT0JnTlZIUThCQWY4RUJBTUNCNEF3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WCkhRNEVGZ1FV
      d0ZFbVFJMFAvTExQKzhmNkd1VkpMWDIrQmxBd0h3WURWUjBqQkJnd0ZvQVVDZzZlQmY2MDRKRkUK
      MzgxaVB3Nk1JekwrZDJvd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXROemRpWXpVME9XUTRO
      QzAyTW0wNQpNakNCandZSUtnTUVCUVlIQ0FFRWdZSjdJbUYwZEhKeklqcDdJbUZpWVdNdWFXNXBk
      Q0k2SW5SeWRXVWlMQ0poClpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnBiR2xoZEdsdmJpSTZJ
      bUYxWkdsMGIzSXlJaXdpYUdZdVJXNXkKYjJ4c2JXVnVkRWxFSWpvaVFXUnRhVzVBWVhWa2FYUnZj
      akl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbUZrYldsdQpJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FN
      RVVDSVFEb0RUUzBRdXFIR2RMd2xpRmhNTmhqNWdvNHcwYk9lNGhYCllaVmNRRGNHQUFJZ2ZOTVc1
      ZCtwTFFzNVI1QS9ESWFoclk5bjg1dG5nb2xSWkFjc3lRSWV3NXM9Ci0tLS0tRU5EIENFUlRJRklD
      QVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrtBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlCL0RDQ0FhS2dBd0lCQWdJVUZteUp0MHBzS0EzajlMODBUclA5ZWE4TnQ1TXdDZ1lJS29aSXpq
      MEVBd0l3ClhERUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXUKTVJFd0R3WURWUVFLREFoQmRXUnBkRzl5TWpFWU1CWUdBMVVFQXd3UFky
      RXVZWFZrYVhSdmNqSXRibVYwTUI0WApEVEl5TURneE56RTFNVFF3T0ZvWERUSTFNRFl3TmpFMU1U
      UXdPRm93WERFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOCkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0Ex
      VUVCd3dHVEc5dVpHOXVNUkV3RHdZRFZRUUtEQWhCZFdScGRHOXkKTWpFWU1CWUdBMVVFQXd3UFky
      RXVZWFZrYVhSdmNqSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowRApBUWNEUWdBRTNB
      TGZWZzc0c2I2K0pSZVc5R0g1azB4d0pKZldCZWxvMkdWRjcrZ2E3alVkclY5VG9WcXVQeXptCnRJ
      c000dVY0NlhvRmlyWm1FQlppelJzdlFINjJ0S05DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pB
      T0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZRUZBb09uZ1grdE9DUlJOL05ZajhPakNN
      eS9uZHFNQW9HQ0NxRwpTTTQ5QkFNQ0EwZ0FNRVVDSVFDamFXdzg0akhPZHd0TlpEczBJQnRHSk5Y
      MGFpcVNJcWw5WkNUdktVbCtSZ0lnCkhGN09odnUwYml2bnpqTCtnYW9NelRUbytHdHRLODNuSUp4
      M2g0NG1SVTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiNAoHV3JpdGVycxIp
      Eh8IARIbEggSBggBEgIIABoPEg0KC2F1ZGl0b3IyTVNQGgZBZG1pbnMiNQoGQWRtaW5zEisSIQgB
      Eh0SCBIGCAESAggAGhESDwoLYXVkaXRvcjJNU1AQARoGQWRtaW5zIjgKC0VuZG9yc2VtZW50EikS
      HwgBEhsSCBIGCAESAggAGg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyI0CgdSZWFkZXJzEikSHwgB
      EhsSCBIGCAESAggAGg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyoGQWRtaW5zEsgWCgthdWRpdG9y
      MU1TUBK4FhrQFAoDTVNQEsgUEr0UEroUCgthdWRpdG9yMU1TUBLtBS0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlCL0RDQ0FhS2dBd0lCQWdJVWZsYU9WUTNZYjJabktraHJldmVXL2lYcVdG
      MHdDZ1lJS29aSXpqMEVBd0l3ClhERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNt
      bGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJFd0R3WURWUVFLREFoQmRXUnBkRzl5TVRFWU1C
      WUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUI0WApEVEl5TURneE56RTFNVEkxTUZvWERU
      STFNRFl3TmpFMU1USTFNRm93WERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOCkJnTlZCQWdNQmxwMWNt
      bGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm9NUkV3RHdZRFZRUUtEQWhCZFdScGRHOXkKTVRFWU1C
      WUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemow
      RApBUWNEUWdBRVQvbytUOXBqMlFIbWYveXRnMFIvekRhbFJ1d2Jhb29WUEtCWktXajRyMlcxMGQ0
      NWNqc2RtbGpVCjNrdkhoeXA1UEk1K2VoalpleEIvVzlvaGJ6NFNNS05DTUVBd0R3WURWUjBUQVFI
      L0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZRUZBY2dCR05teWxF
      QmFoTEcwY20vU0EyYmVTTldNQW9HQ0NxRwpTTTQ5QkFNQ0EwZ0FNRVVDSVFDZ0ZNaEdaQ0Z3dUls
      VEFETlZlSDFSQmc4ekJ6MnQ4SWFvMFhobGdnRlVuQUlnCkNleE1qWXFpQk9Uc1dDWmVSZlhReGhI
      VlFVTFJWWnpXWWgvU1FQVWpQOFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIroILS0tLS1C
      RUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4ekNDQXBxZ0F3SUJBZ0lVZkNCN1FYNlg0QXdZdG9z
      aVRtTVV2M29LNVo0d0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdO
      VkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUkV3RHdZRFZRUUtEQWhCZFdS
      cGRHOXlNVEVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pFdGJtVjBNQjRYCkRUSXlNRGd4TnpF
      MU1UZ3dNRm9YRFRJek1EZ3hOekUxTWpNd01Gb3dlakVMTUFrR0ExVUVCaE1DUTBneEdqQVkKQmdO
      VkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUkV3RHdZRFZRUUtFd2hCZFdScGRHOXlNVEVm
      TUF3RwpBMVVFQ3hNRllXUnRhVzR3RHdZRFZRUUxFd2hoZFdScGRHOXlNVEViTUJrR0ExVUVBd3dT
      UVdSdGFXNUFZWFZrCmFYUnZjakV0Ym1WME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNE
      UWdBRWFvR1BqZUlPdUN0Z3dBNGkKTmZiMS9ESWZRUXlvSXhXbnY3Y2o2SUZRMjNhYmtBN0l6cmFD
      dURpY0xWdWdiRzdxWG9tQ25vRVhiNDRRcVREZAphSytRcUtPQ0FSb3dnZ0VXTUE0R0ExVWREd0VC
      L3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkCkRnUVdCQlE5VXcwQW5uUXM0dGl0
      alpEWWk1RURyd0lLMVRBZkJnTlZIU01FR0RBV2dCUUhJQVJqWnNwUkFXb1MKeHRISnYwZ05tM2tq
      VmpBa0JnTlZIUkVFSFRBYmdobGpZUzEwYjI5c2N5MDFOVGRtWW1ZM1lqWTJMVGxqZW1RMApNSUdQ
      QmdncUF3UUZCZ2NJQVFTQmduc2lZWFIwY25NaU9uc2lZV0poWXk1cGJtbDBJam9pZEhKMVpTSXNJ
      bUZrCmJXbHVJam9pZEhKMVpTSXNJbWhtTGtGbVptbHNhV0YwYVc5dUlqb2lZWFZrYVhSdmNqRWlM
      Q0pvWmk1RmJuSnYKYkd4dFpXNTBTVVFpT2lKQlpHMXBia0JoZFdScGRHOXlNUzF1WlhRaUxDSm9a
      aTVVZVhCbElqb2lZV1J0YVc0aQpmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnZVN0ZG9oajFF
      VGUxWERqbFFRaExPTEZFeGJ3Rjd2c3dLMGgxCnRpRmZJWjBDSUdORWwrMXYwRWtqdjBrL3lYME1H
      SFRjMWdxMUtubzRubHowR1cycjc5NEcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hB
      MhIGU0hBMjU2Su0FLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIvRENDQWFLZ0F3SUJB
      Z0lVZmxhT1ZRM1liMlpuS2tocmV2ZVcvaVhxV0Ywd0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dB
      MVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpN
      UkV3RHdZRFZRUUtEQWhCZFdScGRHOXlNVEVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pFdGJt
      VjBNQjRYCkRUSXlNRGd4TnpFMU1USTFNRm9YRFRJMU1EWXdOakUxTVRJMU1Gb3dYREVMTUFrR0Ex
      VUVCaE1DUTBneER6QU4KQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdOb01S
      RXdEd1lEVlFRS0RBaEJkV1JwZEc5eQpNVEVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pFdGJt
      VjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBECkFRY0RRZ0FFVC9vK1Q5cGoyUUhtZi95dGcw
      Ui96RGFsUnV3YmFvb1ZQS0JaS1dqNHIyVzEwZDQ1Y2pzZG1salUKM2t2SGh5cDVQSTUrZWhqWmV4
      Qi9XOW9oYno0U01LTkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVgpIUThCQWY4RUJB
      TUNBYVl3SFFZRFZSME9CQllFRkFjZ0JHTm15bEVCYWhMRzBjbS9TQTJiZVNOV01Bb0dDQ3FHClNN
      NDlCQU1DQTBnQU1FVUNJUUNnRk1oR1pDRnd1SWxUQUROVmVIMVJCZzh6QnoydDhJYW8wWGhsZ2dG
      VW5BSWcKQ2V4TWpZcWlCT1RzV0NaZVJmWFF4aEhWUVVMUlZaeldZaC9TUVBValA4WT0KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlucyI1CgZBZG1pbnMSKxIhCAESHRIIEgYIARICCAAa
      ERIPCgthdWRpdG9yMU1TUBABGgZBZG1pbnMiOAoLRW5kb3JzZW1lbnQSKRIfCAESGxIIEgYIARIC
      CAAaDxINCgthdWRpdG9yMU1TUBoGQWRtaW5zIjQKB1JlYWRlcnMSKRIfCAESGxIIEgYIARICCAAa
      DxINCgthdWRpdG9yMU1TUBoGQWRtaW5zIjQKB1dyaXRlcnMSKRIfCAESGxIIEgYIARICCAAaDxIN
      CgthdWRpdG9yMU1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicS
      DAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIv
      QWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9D
      aGFubmVsL09yZGVyZXIvQWRtaW5zGiYKEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFk
      bWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zGkoKEE9y
      ZGVyZXJBZGRyZXNzZXMSNhIbChlvcmRlcmVyMS5vcmRlcmVyLW5ldDo3MDUwGhcvQ2hhbm5lbC9P
      cmRlcmVyL0FkbWlucxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zIiIKB1dy
      aXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQ
      AhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zKgZBZG1pbnMaDgoE
      CgIKAAoACgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: orderer-orderer1
  namespace: orderer-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: orderer-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-dev-test
        namespace: flux-dev-test
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: orderer-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: ordererMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: orderersc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://aa34b638ff2ca4f3c9bcefa161f4b801-973901913.eu-west-1.elb.amazonaws.com:8200
      role: vault-role
      authpath: dev-testorderer-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/orderer-net/orderers/orderer1.orderer-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIBChfg92sVL9X5zN+ZVo5FfaUvl3IFh3xacgSAgXCkm4EuJcCt9cCtxcCngKWggBEAEaBgix
      19mXBiIKc3lzY2hhbm5lbCpAYTAzZjk2M2Q2MWZiZDlhMmUwYWFmYTA4MTE0NjIyNzZjNDg4YzM2
      OTE5NmJlYjFiMDRiMWE0OTc5YTVmZWZkMBIaEhiJuJNFywFodgqMejV/da/aoBRoNKRt6acS31sK
      3FsS2VsSoyoKB09yZGVyZXISlyoSkhYKCm9yZGVyZXJNU1ASgxYanxQKA01TUBKXFBKMFBKJFAoK
      b3JkZXJlck1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lC
      QWdJVUlPMUlJZ0JkUWUvWk5LbUUyVFIwTGZvWFVMSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxk
      REFlRncweQpNakE0TVRJeE5EUTNOVEphRncweU5UQTJNREV4TkRRM05USmFNRm94Q3pBSkJnTlZC
      QVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN
      QTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdX
      VEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVJ4a24vUk1HT3VUclZPcWJBRHRreUdv
      TlQrWTBDZDBCbGEybUZwdHdjYlQrTlcxQ3dyYVhmTXNtMXFyQnh3CngyY0FmMTU3aWNOVU1FRzlZ
      aHNtOWlKWW8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw
      akFkQmdOVkhRNEVGZ1FVeDFvayt0VUFQNHRFOGJTcHFIYXFpbXRoTmNZd0NnWUlLb1pJemowRQpB
      d0lEU0FBd1JRSWdQd3NIcFZDbDM1T1M2SWN4WUsvUW8rbmxUZEl2aVBENS92Q1cwNW8wVEhrQ0lR
      Q29hNnNOClhNeTF5T1YzVTVWTTRTNE5GVlZCRHRoZTRWRWtMemhwVGo5TXp3PT0KLS0tLS1FTkQg
      Q0VSVElGSUNBVEUtLS0tLQoikggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzFUQ0NB
      bnVnQXdJQkFnSVVaRWZmVWplc1c4TWJWVCs0Uy9TdStndGxjbmd3Q2dZSUtvWkl6ajBFQXdJdwpX
      akVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH
      OXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzV2Y21SbGNt
      VnlMVzVsZERBZUZ3MHkKTWpBNE1USXhORFV6TURCYUZ3MHlNekE0TVRJeE5EVTRNREJhTUdneEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERqQU1CZ05WCkJBc1RCV0ZrYldsdU1Sb3dHQVlEVlFRRERC
      RkJaRzFwYmtCdmNtUmxjbVZ5TFc1bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEw
      SUFCTURtSmF6QTNZUUphOVRsRm5Ld3BoWUc1UWwwUDZWOXBaUG92cEVZUXR6SAo2c0Z3eDRpRVIz
      N1c0U3NIOUcrSWdqSmM0R2luM0VZQnZsdzNrVGRCUExlamdnRVBNSUlCQ3pBT0JnTlZIUThCCkFm
      OEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVNHE0eEpuTldGdkZOaGJ0
      bDRwcHEKenlUR2luOHdId1lEVlIwakJCZ3dGb0FVeDFvayt0VUFQNHRFOGJTcHFIYXFpbXRoTmNZ
      d0l3WURWUjBSQkJ3dwpHb0lZWTJFdGRHOXZiSE10Wm1NM1ltWTJOamcyTFdvMFpEaG1NSUdGQmdn
      cUF3UUZCZ2NJQVFSNWV5SmhkSFJ5CmN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdS
      dGFXNGlPaUowY25WbElpd2lhR1l1UVdabWFXeHAKWVhScGIyNGlPaUlpTENKb1ppNUZibkp2Ykd4
      dFpXNTBTVVFpT2lKQlpHMXBia0J2Y21SbGNtVnlMVzVsZENJcwpJbWhtTGxSNWNHVWlPaUpoWkcx
      cGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBZ3loeXo3Z3d6endxCkd2eTdCQVNKRmE2
      OExtOXNuU2hYTTA5Yy9ZWW5Gc2NDSUJVcnc4Qm9kVnhHYWJtenRWU0pTOTBBWlZkMXBNRXQKU09U
      cENPTUpnV0NMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVUlPMUlJZ0JkUWUv
      Wk5LbUUyVFIwTGZvWFVMSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncweQpNakE0TVRJ
      eE5EUTNOVEphRncweU5UQTJNREV4TkRRM05USmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE
      ClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr
      WlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQwpBQVJ4a24vUk1HT3VUclZPcWJBRHRreUdvTlQrWTBDZDBCbGEybUZw
      dHdjYlQrTlcxQ3dyYVhmTXNtMXFyQnh3CngyY0FmMTU3aWNOVU1FRzlZaHNtOWlKWW8wSXdRREFQ
      QmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV
      eDFvayt0VUFQNHRFOGJTcHFIYXFpbXRoTmNZd0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWdQd3NI
      cFZDbDM1T1M2SWN4WUsvUW8rbmxUZEl2aVBENS92Q1cwNW8wVEhrQ0lRQ29hNnNOClhNeTF5T1Yz
      VTVWTTRTNE5GVlZCRHRoZTRWRWtMemhwVGo5TXp3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKb3JkZXJlck1TUBoG
      QWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpvcmRlcmVyTVNQGgZBZG1p
      bnMiNAoGQWRtaW5zEioSIAgBEhwSCBIGCAESAggAGhASDgoKb3JkZXJlck1TUBABGgZBZG1pbnMi
      NwoLRW5kb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpvcmRlcmVyTVNQGgZBZG1pbnMq
      BkFkbWlucxoiCglCYXRjaFNpemUSFRILCAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRpbWVv
      dXQSDhIECgIycxoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zGiQKDENh
      cGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMa1BEKDUNvbnNlbnN1c1R5cGUSwhEStxEK
      CGV0Y2RyYWZ0EqoRCpMRChRvcmRlcmVyMS5vcmRlcmVyLW5ldBCKNxq6CC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlDOGpDQ0FwbWdBd0lCQWdJVWZPUXRiNUhzTGpBZ2ZDMllTeU56Zm4v
      cmtmMHdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4
      dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJj
      d0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncweQpNakE0TVRJeE5EVXpNREJhRncw
      eU16QTRNVEl4TkRVNE1EQmFNRzB4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0
      MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RURBT0JnTlYKQkFz
      VEIyOXlaR1Z5WlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeExtOXlaR1Z5WlhJdGJtVjBNRmt3
      RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFOW9EV29uNG9UN1FESWRSSHlobmtBK25v
      Z1JlakoyQjBPTE5OCnViME5CK2h2cnIrV24vTzVtQ0JYQk9HT0lZa1BOR0wvRXBjSmliYlJSVkxL
      Mmh5VThLT0NBU2d3Z2dFa01BNEcKQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy
      QmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRApWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV
      aTduUUR4VUlxQkdvd2d1WFZxeEJ1R0lmK1BNd0h3WURWUjBqCkJCZ3dGb0FVeDFvayt0VUFQNHRF
      OGJTcHFIYXFpbXRoTmNZd093WURWUjBSQkRRd01vSVViM0prWlhKbGNqRXUKYjNKa1pYSmxjaTF1
      WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1WTI5dE1HZ0dDQ29EQkFVRwpCd2dC
      QkZ4N0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2lhR1l1Ulc1eWIyeHNi
      V1Z1CmRFbEVJam9pYjNKa1pYSmxjakV1YjNKa1pYSmxjaTF1WlhRaUxDSm9aaTVVZVhCbElqb2li
      M0prWlhKbGNpSjkKZlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBS1NKQjJsZXJoejgxWm4wUDhK
      SVV6ZW53RmpPb0RtbHJIVTFxWApNVFN2NWdJZ05kNHRWUVp3RWUwZ25Qbk42YUM1eTRHZkVjbDFp
      R3Z5WFNFMEU3NXpQeXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIroILS0tLS1CRUdJTiBD
      RVJUSUZJQ0FURS0tLS0tCk1JSUM4akNDQXBtZ0F3SUJBZ0lVZk9RdGI1SHNMakFnZkMyWVN5Tnpm
      bi9ya2Ywd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01C
      a3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlN
      UmN3RlFZRFZRUUREQTVqWVM1dmNtUmxjbVZ5TFc1bGREQWVGdzB5Ck1qQTRNVEl4TkRVek1EQmFG
      dzB5TXpBNE1USXhORFU0TURCYU1HMHhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFN
      UzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVgpC
      QXNUQjI5eVpHVnlaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG05eVpHVnlaWEl0Ym1WME1G
      a3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUU5b0RXb240b1Q3UURJZFJIeWhua0Er
      bm9nUmVqSjJCME9MTk4KdWIwTkIraHZycitXbi9PNW1DQlhCT0dPSVlrUE5HTC9FcGNKaWJiUlJW
      TEsyaHlVOEtPQ0FTZ3dnZ0VrTUE0RwpBMVVkRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJn
      Z3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZn
      UVVpN25RRHhVSXFCR293Z3VYVnF4QnVHSWYrUE13SHdZRFZSMGoKQkJnd0ZvQVV4MW9rK3RVQVA0
      dEU4YlNwcUhhcWltdGhOY1l3T3dZRFZSMFJCRFF3TW9JVWIzSmtaWEpsY2pFdQpiM0prWlhKbGNp
      MXVaWFNDR205eVpHVnlaWEl4TG1SbGRtVnNiM0F1Ykc5allXd3VZMjl0TUdnR0NDb0RCQVVHCkJ3
      Z0JCRng3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFXOXVJam9pSWl3aWFHWXVSVzV5YjJ4
      c2JXVnUKZEVsRUlqb2liM0prWlhKbGNqRXViM0prWlhKbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpv
      aWIzSmtaWEpsY2lKOQpmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFLU0pCMmxlcmh6ODFabjBQ
      OEpJVXplbndGak9vRG1sckhVMXFYCk1UU3Y1Z0lnTmQ0dFZRWndFZTBnblBuTjZhQzV5NEdmRWNs
      MWlHdnlYU0UwRTc1elB5dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgB
      IAUogICACBoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIioKD0Js
      b2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJ
      CgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMqBkFk
      bWlucxLzLgoLQ29uc29ydGl1bXMS4y4SmC4KGkNhcmJvbkFjY291bnRpbmdDb25zb3J0aXVtEvkt
      EswWCgthdWRpdG9yMU1TUBK8FhrUFAoDTVNQEswUEsEUEr4UCgthdWRpdG9yMU1TUBLtBS0tLS0t
      QkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCL1RDQ0FhS2dBd0lCQWdJVUlOUnJ5SzEzbThTdkph
      V0c1WFpOOG42OW51TXdDZ1lJS29aSXpqMEVBd0l3ClhERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJn
      TlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJFd0R3WURWUVFLREFoQmRX
      UnBkRzl5TVRFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUI0WApEVEl5TURneE1q
      RTBORGt3T0ZvWERUSTFNRFl3TVRFME5Ea3dPRm93WERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOCkJn
      TlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm9NUkV3RHdZRFZRUUtEQWhCZFdS
      cGRHOXkKTVRFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUZrd0V3WUhLb1pJemow
      Q0FRWUlLb1pJemowRApBUWNEUWdBRWEwem5lWm5FSllNbmlPd1JZYlIrRUJkRFNkaVZXcjBZbFF3
      ekZOZnJwZ3dmbjZIN2RzTUpUdmhpCmRSQ2ZaamI5K1h6RUlNeFhCSzR1N2hDQ0xheFZBNk5DTUVB
      d0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZ
      RUZGWHFpWWxVSkJrNjBHLzJuMEdRQ2hIdCtvNGZNQW9HQ0NxRwpTTTQ5QkFNQ0Ewa0FNRVlDSVFE
      VEwrUTEzNGF0ZUhRQW5Yck1wU1RGWXo3SVd2VGxrMEtZOUFPQTBUeVh5QUloCkFJYW5qZjBuTFNa
      aGxDYlBJeHk5UnQ0SElUaElwNW1UVitMVlpQZ2drUCtCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KIr4ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5RENDQXBxZ0F3SUJBZ0lVWjJB
      SDkrUEtjcG1tTW4raDVIUWZFTjgzVXRRd0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhN
      Q1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUkV3RHdZ
      RFZRUUtEQWhCZFdScGRHOXlNVEVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pFdGJtVjBNQjRY
      CkRUSXlNRGd4TWpFME5UVXdNRm9YRFRJek1EZ3hNakUxTURBd01Gb3dlakVMTUFrR0ExVUVCaE1D
      UTBneEdqQVkKQmdOVkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUkV3RHdZRFZRUUtFd2hC
      ZFdScGRHOXlNVEVmTUF3RwpBMVVFQ3hNRllXUnRhVzR3RHdZRFZRUUxFd2hoZFdScGRHOXlNVEVi
      TUJrR0ExVUVBd3dTUVdSdGFXNUFZWFZrCmFYUnZjakV0Ym1WME1Ga3dFd1lIS29aSXpqMENBUVlJ
      S29aSXpqMERBUWNEUWdBRWhnSXRQd2RRM3NleUdoRTgKSmhWL1pIdTRCbktZais5ejRMdGh0SHZv
      TXR4azZtZzFHMktDOXd6L3lxUERaNENBblB0WHJaQkxQUU9BTFJUVQphS3NiNGFPQ0FSb3dnZ0VX
      TUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkCkRnUVdCQlJy
      b002TS9VQnVtdDlHWFBqRitZTENibU00QVRBZkJnTlZIU01FR0RBV2dCUlY2b21KVkNRWk90QnYK
      OXA5QmtBb1I3ZnFPSHpBa0JnTlZIUkVFSFRBYmdobGpZUzEwYjI5c2N5MDNPVFE0TldOa09XUmtM
      VzFpT1hObgpNSUdQQmdncUF3UUZCZ2NJQVFTQmduc2lZWFIwY25NaU9uc2lZV0poWXk1cGJtbDBJ
      am9pZEhKMVpTSXNJbUZrCmJXbHVJam9pZEhKMVpTSXNJbWhtTGtGbVptbHNhV0YwYVc5dUlqb2lZ
      WFZrYVhSdmNqRWlMQ0pvWmk1RmJuSnYKYkd4dFpXNTBTVVFpT2lKQlpHMXBia0JoZFdScGRHOXlN
      UzF1WlhRaUxDSm9aaTVVZVhCbElqb2lZV1J0YVc0aQpmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdS
      UUloQU1MZlhnVWxLT0VWNStKYkdOL2d3ZWY0cEZyK2w4cFlLcjh4CmdEWVErUUJaQWlBbEJWVE9D
      alRPWVAveG9XUms4NjZFNVl1RzBaN2U3L1dINEdGYjN3SnUwZz09Ci0tLS0tRU5EIENFUlRJRklD
      QVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrtBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpN
      SUlCL1RDQ0FhS2dBd0lCQWdJVUlOUnJ5SzEzbThTdkphV0c1WFpOOG42OW51TXdDZ1lJS29aSXpq
      MEVBd0l3ClhERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0Ex
      VUVCd3dHV25WeWFXTm8KTVJFd0R3WURWUVFLREFoQmRXUnBkRzl5TVRFWU1CWUdBMVVFQXd3UFky
      RXVZWFZrYVhSdmNqRXRibVYwTUI0WApEVEl5TURneE1qRTBORGt3T0ZvWERUSTFNRFl3TVRFME5E
      a3dPRm93WERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOCkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0Ex
      VUVCd3dHV25WeWFXTm9NUkV3RHdZRFZRUUtEQWhCZFdScGRHOXkKTVRFWU1CWUdBMVVFQXd3UFky
      RXVZWFZrYVhSdmNqRXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowRApBUWNEUWdBRWEw
      em5lWm5FSllNbmlPd1JZYlIrRUJkRFNkaVZXcjBZbFF3ekZOZnJwZ3dmbjZIN2RzTUpUdmhpCmRS
      Q2ZaamI5K1h6RUlNeFhCSzR1N2hDQ0xheFZBNk5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pB
      T0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZRUZGWHFpWWxVSkJrNjBHLzJuMEdRQ2hI
      dCtvNGZNQW9HQ0NxRwpTTTQ5QkFNQ0Ewa0FNRVlDSVFEVEwrUTEzNGF0ZUhRQW5Yck1wU1RGWXo3
      SVd2VGxrMEtZOUFPQTBUeVh5QUloCkFJYW5qZjBuTFNaaGxDYlBJeHk5UnQ0SElUaElwNW1UVitM
      VlpQZ2drUCtCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiNAoHUmVhZGVycxIp
      Eh8IARIbEggSBggBEgIIABoPEg0KC2F1ZGl0b3IxTVNQGgZBZG1pbnMiNAoHV3JpdGVycxIpEh8I
      ARIbEggSBggBEgIIABoPEg0KC2F1ZGl0b3IxTVNQGgZBZG1pbnMiNQoGQWRtaW5zEisSIQgBEh0S
      CBIGCAESAggAGhESDwoLYXVkaXRvcjFNU1AQARoGQWRtaW5zIjgKC0VuZG9yc2VtZW50EikSHwgB
      EhsSCBIGCAESAggAGg8SDQoLYXVkaXRvcjFNU1AaBkFkbWlucyoGQWRtaW5zEswWCgthdWRpdG9y
      Mk1TUBK8FhrUFAoDTVNQEswUEsEUEr4UCgthdWRpdG9yMk1TUBLtBS0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlCL1RDQ0FhS2dBd0lCQWdJVUxPUGpqNGVnd1c0cmoyUmpnRW93ZmxLOGxw
      b3dDZ1lJS29aSXpqMEVBd0l3ClhERUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJFd0R3WURWUVFLREFoQmRXUnBkRzl5TWpFWU1C
      WUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqSXRibVYwTUI0WApEVEl5TURneE1qRTBOVEF5TlZvWERU
      STFNRFl3TVRFME5UQXlOVm93WERFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOCkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkV3RHdZRFZRUUtEQWhCZFdScGRHOXkKTWpFWU1C
      WUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemow
      RApBUWNEUWdBRTgrQlN0YnFSN3RpL0JOQWdXZzBuS2dHY3JNWFo3RVVhaXp6MHdjVlpLUTIvVFFT
      WkhLaFFpUEd4ClY4aUVZTEpQYkNrVFY3dEJ2VTlmdTNxb0ZSWFUwNk5DTUVBd0R3WURWUjBUQVFI
      L0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZRUZGak9FU0RTcDNY
      cHFaRHAvc2kzVHp0WTYvQm9NQW9HQ0NxRwpTTTQ5QkFNQ0Ewa0FNRVlDSVFEeXZ1MzQ0OTFXNjlE
      Y0dibUVDNG14VG4xRHZkdVBFTmFKRlF6a1ByanhzUUloCkFOSmFLOEFBQWtrSjlqSy9GTzQ0WGt1
      Z0Rnd3JnQVJiNGJqMGNDMlR5YlhhCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIr4ILS0tLS1C
      RUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5RENDQXB1Z0F3SUJBZ0lVRWlVOUx6NmIzdDEyUTBR
      YnNsOTU1RjJ6MGFNd0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdO
      VkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkV3RHdZRFZRUUtEQWhCZFdS
      cGRHOXlNakVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJtVjBNQjRYCkRUSXlNRGd4TWpF
      ME5UZ3dNRm9YRFRJek1EZ3hNakUxTURNd01Gb3dlekVMTUFrR0ExVUVCaE1DUjBJeEd6QVoKQmdO
      VkJBY1RFalV4TGpVd0x5MHdMakV6TDB4dmJtUnZiakVSTUE4R0ExVUVDaE1JUVhWa2FYUnZjakl4
      SHpBTQpCZ05WQkFzVEJXRmtiV2x1TUE4R0ExVUVDeE1JWVhWa2FYUnZjakl4R3pBWkJnTlZCQU1N
      RWtGa2JXbHVRR0YxClpHbDBiM0l5TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VI
      QTBJQUJHR3JFdXRyNFRXUWNwUEwKWnF0emFzV20xc3JkMzF4L2k0ZzFxRlBCVXh3YnpzR2ZzeTJV
      dmJIMGRnMVdEVVo4VGZnQlVGMzBZZ3M3ekk2YwpveitwT2tTamdnRWFNSUlCRmpBT0JnTlZIUThC
      QWY4RUJBTUNCNEF3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WCkhRNEVGZ1FVQzJxUkxWYzRSWHhR
      VmM0SnAwdVFVK1NrRlJrd0h3WURWUjBqQkJnd0ZvQVVXTTRSSU5LbmRlbXAKa09uK3lMZFBPMWpy
      OEdnd0pBWURWUjBSQkIwd0c0SVpZMkV0ZEc5dmJITXRObVJpTnpWaVkyUTJPQzE2YlhNMwpaekNC
      andZSUtnTUVCUVlIQ0FFRWdZSjdJbUYwZEhKeklqcDdJbUZpWVdNdWFXNXBkQ0k2SW5SeWRXVWlM
      Q0poClpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnBiR2xoZEdsdmJpSTZJbUYxWkdsMGIzSXlJ
      aXdpYUdZdVJXNXkKYjJ4c2JXVnVkRWxFSWpvaVFXUnRhVzVBWVhWa2FYUnZjakl0Ym1WMElpd2lh
      R1l1Vkhsd1pTSTZJbUZrYldsdQpJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUFaZmVGb2FF
      SlN6OFFZOVFaNkF4V3Q2bjIraXJzM3I0RXRnCjlYeXI5MnhuQWlCN3FBcUtEcWRZSXFlaC9tVFNW
      NHh2Wko3QXdRTldqSHczQzFEZEZKT2tTUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4K
      BFNIQTISBlNIQTI1NkrtBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCL1RDQ0FhS2dB
      d0lCQWdJVUxPUGpqNGVnd1c0cmoyUmpnRW93ZmxLOGxwb3dDZ1lJS29aSXpqMEVBd0l3ClhERUxN
      QWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpH
      OXUKTVJFd0R3WURWUVFLREFoQmRXUnBkRzl5TWpFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNq
      SXRibVYwTUI0WApEVEl5TURneE1qRTBOVEF5TlZvWERUSTFNRFl3TVRFME5UQXlOVm93WERFTE1B
      a0dBMVVFQmhNQ1IwSXhEekFOCkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpH
      OXVNUkV3RHdZRFZRUUtEQWhCZFdScGRHOXkKTWpFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNq
      SXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowRApBUWNEUWdBRTgrQlN0YnFSN3RpL0JO
      QWdXZzBuS2dHY3JNWFo3RVVhaXp6MHdjVlpLUTIvVFFTWkhLaFFpUEd4ClY4aUVZTEpQYkNrVFY3
      dEJ2VTlmdTNxb0ZSWFUwNk5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFm
      OEVCQU1DQWFZd0hRWURWUjBPQkJZRUZGak9FU0RTcDNYcHFaRHAvc2kzVHp0WTYvQm9NQW9HQ0Nx
      RwpTTTQ5QkFNQ0Ewa0FNRVlDSVFEeXZ1MzQ0OTFXNjlEY0dibUVDNG14VG4xRHZkdVBFTmFKRlF6
      a1ByanhzUUloCkFOSmFLOEFBQWtrSjlqSy9GTzQ0WGt1Z0Rnd3JnQVJiNGJqMGNDMlR5YlhhCi0t
      LS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiNQoGQWRtaW5zEisSIQgBEh0SCBIGCAES
      AggAGhESDwoLYXVkaXRvcjJNU1AQARoGQWRtaW5zIjgKC0VuZG9yc2VtZW50EikSHwgBEhsSCBIG
      CAESAggAGg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyI0CgdSZWFkZXJzEikSHwgBEhsSCBIGCAES
      AggAGg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyI0CgdXcml0ZXJzEikSHwgBEhsSCBIGCAESAggA
      Gg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyoGQWRtaW5zGkAKFUNoYW5uZWxDcmVhdGlvblBvbGlj
      eRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRl
      cmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBICEgAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5z
      KhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxomChBIYXNoaW5nQWxnb3JpdGhtEhISCAoGU0hBMjU2
      GgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGluZ1N0cnVjdHVyZRIQEgYI/////w8aBkFkbWlucxpK
      ChBPcmRlcmVyQWRkcmVzc2VzEjYSGwoZb3JkZXJlcjEub3JkZXJlci1uZXQ6NzA1MBoXL0NoYW5u
      ZWwvT3JkZXJlci9BZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAaBkFkbWlucyIi
      CgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1Jl
      YWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyoGQWRtaW5z
      Gg4KBAoCCgAKAAoACgAKAA==

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5

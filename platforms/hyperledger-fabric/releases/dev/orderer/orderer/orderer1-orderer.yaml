apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: orderer-orderer1
  namespace: orderer-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: orderer-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-dev
        namespace: flux-dev
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: orderer-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: ordererMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: orderersc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://aa077027a6c1c43ff8b037247269814a-1850677720.eu-west-1.elb.amazonaws.com:8200
      role: vault-role
      authpath: devorderer-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/orderer-net/orderers/orderer1.orderer-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIHjCUIdfNyJkOdQlxggmBST6tD7kVEENvlzgExyN5tE0Et5cCttcCthcCngKWggBEAEaBgix
      zrqXBiIKc3lzY2hhbm5lbCpAZWZlMzllMDQ2MGE1NTU3MzhlYWY2OTBkN2FmYWY5NjJmZWM2ZmE5
      ZmZjYTQyNTZmMmNhOWNjY2E4ZmVmZTBlOBIaEhhCLDh1GIC9slGi/v/DgXIAye2a9imW4qMS21sK
      2FsS1VsSoyoKB09yZGVyZXISlyoSkhYKCm9yZGVyZXJNU1ASgxYanxQKA01TUBKXFBKMFBKJFAoK
      b3JkZXJlck1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lC
      QWdJVURBT2kzL2Y5bXJ2a2xDLzF5bjlnbHVrZEJkSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUK
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxk
      REFlRncweQpNakE0TURZeE56STRNRE5hRncweU5UQTFNall4TnpJNE1ETmFNRm94Q3pBSkJnTlZC
      QVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFN
      QTRHQTFVRUNnd0hUM0prWlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdX
      VEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVRoTk1OanQ0dy96cC9OTVo2bThKektI
      RDB0VEh0NVphcXVmSjZZS0Z3OS9CZXhHTDZ6S2M5ZEJMVG9qMzliCnhtakJFUWl5VWU1amtRY2FE
      SC9jZ2pZVm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJw
      akFkQmdOVkhRNEVGZ1FVc0hQampuU0Y5UnVxYm5tQTdxc1pmYjJHSEVnd0NnWUlLb1pJemowRQpB
      d0lEU1FBd1JnSWhBS3pXYkpvWVhMOFVLaUFPVFFHc2ladW1CbTVTRXd0TXowL0NKSmNBYmpJSUFp
      RUE5MWliCjk3TVd0YWhZVmtiSE5NS3ZJWXBGNjNXcE01VG1DdEZJVnY3VnIrND0KLS0tLS1FTkQg
      Q0VSVElGSUNBVEUtLS0tLQoikggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzFUQ0NB
      bnVnQXdJQkFnSVVIRWQ2dXg3Lzg0dVpIK1hvazNveGR3VDI4REF3Q2dZSUtvWkl6ajBFQXdJdwpX
      akVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH
      OXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1SY3dGUVlEVlFRRERBNWpZUzV2Y21SbGNt
      VnlMVzVsZERBZUZ3MHkKTWpBNE1EWXhOekk0TURCYUZ3MHlNekE0TURZeE56TXpNREJhTUdneEN6
      QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVE
      QU9CZ05WQkFvVEIwOXlaR1Z5WlhJeERqQU1CZ05WCkJBc1RCV0ZrYldsdU1Sb3dHQVlEVlFRRERC
      RkJaRzFwYmtCdmNtUmxjbVZ5TFc1bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEw
      SUFCSXA3Qkx4clI2YzlrdlZsN2JrSkdrQjN0QW5uRTQrUEROdnU1WFBDSlptQgpFV0pkVGRjZkFB
      aDVPWWxnR1JwYVE2Ri93VnZlakh5KzFOdnc0U1gxODM2amdnRVBNSUlCQ3pBT0JnTlZIUThCCkFm
      OEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVR1JmYkpJUyszcHF5SEVw
      Q21sZkUKbTBZQ1BKY3dId1lEVlIwakJCZ3dGb0FVc0hQampuU0Y5UnVxYm5tQTdxc1pmYjJHSEVn
      d0l3WURWUjBSQkJ3dwpHb0lZWTJFdGRHOXZiSE10TlRsbU9EVTNZMlkwTFdOcU5XMTNNSUdGQmdn
      cUF3UUZCZ2NJQVFSNWV5SmhkSFJ5CmN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdS
      dGFXNGlPaUowY25WbElpd2lhR1l1UVdabWFXeHAKWVhScGIyNGlPaUlpTENKb1ppNUZibkp2Ykd4
      dFpXNTBTVVFpT2lKQlpHMXBia0J2Y21SbGNtVnlMVzVsZENJcwpJbWhtTGxSNWNHVWlPaUpoWkcx
      cGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBOXBpOUxjMGsrVmlGCmswaWdBWW9VQzNT
      ZzRyckFwZkpkVjZFZm85eWw1bzBDSURXa1JnVUEyZ0Vuc2QyeWViN0N3UkFkQWFqZ2JjYTAKR0ZF
      eitiSTRVNE11Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrpBS0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVURBT2kzL2Y5bXJ2
      a2xDLzF5bjlnbHVrZEJkSXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      UGNtUmxjbVZ5TVJjd0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncweQpNakE0TURZ
      eE56STRNRE5hRncweU5UQTFNall4TnpJNE1ETmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE
      ClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hUM0pr
      WlhKbGNqRVgKTUJVR0ExVUVBd3dPWTJFdWIzSmtaWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQwpBQVRoTk1OanQ0dy96cC9OTVo2bThKektIRDB0VEh0NVphcXVmSjZZ
      S0Z3OS9CZXhHTDZ6S2M5ZEJMVG9qMzliCnhtakJFUWl5VWU1amtRY2FESC9jZ2pZVm8wSXdRREFQ
      QmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV
      c0hQampuU0Y5UnVxYm5tQTdxc1pmYjJHSEVnd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBS3pX
      YkpvWVhMOFVLaUFPVFFHc2ladW1CbTVTRXd0TXowL0NKSmNBYmpJSUFpRUE5MWliCjk3TVd0YWhZ
      VmtiSE5NS3ZJWXBGNjNXcE01VG1DdEZJVnY3VnIrND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpvcmRlcmVyTVNQEAEa
      BkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCm9yZGVyZXJNU1Aa
      BkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKb3JkZXJlck1TUBoGQWRt
      aW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpvcmRlcmVyTVNQGgZBZG1pbnMq
      BkFkbWlucxoiCglCYXRjaFNpemUSFRILCAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRpbWVv
      dXQSDhIECgIycxoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zGiQKDENh
      cGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMa1BEKDUNvbnNlbnN1c1R5cGUSwhEStxEK
      CGV0Y2RyYWZ0EqoRCpMRChRvcmRlcmVyMS5vcmRlcmVyLW5ldBCKNxq6CC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlDOHpDQ0FwbWdBd0lCQWdJVUkrWUVKWjRXbm9yU0EyZmVMZi9kTnk4
      cEZQVXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4
      dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJj
      d0ZRWURWUVFEREE1allTNXZjbVJsY21WeUxXNWxkREFlRncweQpNakE0TURZeE56STRNREJhRncw
      eU16QTRNRFl4TnpNek1EQmFNRzB4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0
      MU1DOHRNQzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjA5eVpHVnlaWEl4RURBT0JnTlYKQkFz
      VEIyOXlaR1Z5WlhJeEhUQWJCZ05WQkFNVEZHOXlaR1Z5WlhJeExtOXlaR1Z5WlhJdGJtVjBNRmt3
      RXdZSApLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFSzBURW80S2x2RXhRdGdHZ2NWSmlSeEJ0
      c1hCVE1IVXFpdllOCnN1SUZqQ2JqdHM4dTQ5M25UUyttYzJkK3UrdmhhWTFOUEkzczRDN0xCTG5q
      enorUTRLT0NBU2d3Z2dFa01BNEcKQTFVZER3RUIvd1FFQXdJRHFEQWRCZ05WSFNVRUZqQVVCZ2dy
      QmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRApWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FV
      S1k3U0Y1RUpYZGJMK0ZVeGxubGVxcGlEK1djd0h3WURWUjBqCkJCZ3dGb0FVc0hQampuU0Y5UnVx
      Ym5tQTdxc1pmYjJHSEVnd093WURWUjBSQkRRd01vSVViM0prWlhKbGNqRXUKYjNKa1pYSmxjaTF1
      WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1WTI5dE1HZ0dDQ29EQkFVRwpCd2dC
      QkZ4N0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2lhR1l1Ulc1eWIyeHNi
      V1Z1CmRFbEVJam9pYjNKa1pYSmxjakV1YjNKa1pYSmxjaTF1WlhRaUxDSm9aaTVVZVhCbElqb2li
      M0prWlhKbGNpSjkKZlRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQTJJTzFjczVka2NhRFlnaUlv
      NjlxUkFxdUNZWFZsVStHOS9MegpuR2xvL1ZJQ0lCUVgrcTZ0NmNWZTR1empENzU5SjdXbjFSWmpC
      KzFWWkhEN2h4VUZhWDBTCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIroILS0tLS1CRUdJTiBD
      RVJUSUZJQ0FURS0tLS0tCk1JSUM4ekNDQXBtZ0F3SUJBZ0lVSStZRUpaNFdub3JTQTJmZUxmL2RO
      eThwRlBVd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01C
      a3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlN
      UmN3RlFZRFZRUUREQTVqWVM1dmNtUmxjbVZ5TFc1bGREQWVGdzB5Ck1qQTRNRFl4TnpJNE1EQmFG
      dzB5TXpBNE1EWXhOek16TURCYU1HMHhDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFN
      UzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCMDl5WkdWeVpYSXhFREFPQmdOVgpC
      QXNUQjI5eVpHVnlaWEl4SFRBYkJnTlZCQU1URkc5eVpHVnlaWEl4TG05eVpHVnlaWEl0Ym1WME1G
      a3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVLMFRFbzRLbHZFeFF0Z0dnY1ZKaVJ4
      QnRzWEJUTUhVcWl2WU4Kc3VJRmpDYmp0czh1NDkzblRTK21jMmQrdSt2aGFZMU5QSTNzNEM3TEJM
      bmp6eitRNEtPQ0FTZ3dnZ0VrTUE0RwpBMVVkRHdFQi93UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJn
      Z3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZn
      UVVLWTdTRjVFSlhkYkwrRlV4bG5sZXFwaUQrV2N3SHdZRFZSMGoKQkJnd0ZvQVVzSFBqam5TRjlS
      dXFibm1BN3FzWmZiMkdIRWd3T3dZRFZSMFJCRFF3TW9JVWIzSmtaWEpsY2pFdQpiM0prWlhKbGNp
      MXVaWFNDR205eVpHVnlaWEl4TG1SbGRtVnNiM0F1Ykc5allXd3VZMjl0TUdnR0NDb0RCQVVHCkJ3
      Z0JCRng3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFXOXVJam9pSWl3aWFHWXVSVzV5YjJ4
      c2JXVnUKZEVsRUlqb2liM0prWlhKbGNqRXViM0prWlhKbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpv
      aWIzSmtaWEpsY2lKOQpmVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBMklPMWNzNWRrY2FEWWdp
      SW82OXFSQXF1Q1lYVmxVK0c5L0x6Cm5HbG8vVklDSUJRWCtxNnQ2Y1ZlNHV6akQ3NTlKN1duMVJa
      akIrMVZaSEQ3aHhVRmFYMFMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgB
      IAUogICACBoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dy
      aXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQ
      AhoGQWRtaW5zIioKD0Jsb2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMqBkFk
      bWlucxLvLgoLQ29uc29ydGl1bXMS3y4SlC4KGkNhcmJvbkFjY291bnRpbmdDb25zb3J0aXVtEvUt
      EsgWCgthdWRpdG9yMU1TUBK4FhrQFAoDTVNQEsgUEr0UEroUCgthdWRpdG9yMU1TUBLtBS0tLS0t
      QkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCL0RDQ0FhS2dBd0lCQWdJVUZscWhld3kxcjR5YlY1
      b2xYRG41djNJa1prWXdDZ1lJS29aSXpqMEVBd0l3ClhERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJn
      TlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJFd0R3WURWUVFLREFoQmRX
      UnBkRzl5TVRFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUI0WApEVEl5TURnd05q
      RTNNamt4T0ZvWERUSTFNRFV5TmpFM01qa3hPRm93WERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOCkJn
      TlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm9NUkV3RHdZRFZRUUtEQWhCZFdS
      cGRHOXkKTVRFWU1CWUdBMVVFQXd3UFkyRXVZWFZrYVhSdmNqRXRibVYwTUZrd0V3WUhLb1pJemow
      Q0FRWUlLb1pJemowRApBUWNEUWdBRWl3ajJoVStrZThkZWdiN1VHOUNXTjFSWWhVNWVnaDl0a3Uz
      d05CblpaUlNhMTV3ZHJ5c3A0WS9lCm5YTjV3b25ZSHFVWlArTWIrRmkrUk9IVFNSd1RGcU5DTUVB
      d0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlYKSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBPQkJZ
      RUZFMW0ramRuWW11QmRCT2lBWUZNUlBqNTVyV3RNQW9HQ0NxRwpTTTQ5QkFNQ0EwZ0FNRVVDSVFE
      TUsvUXE4RDZMUndqWUxJTHdxcEdBNWlZNDYwSDBza1V3cExOcEdzOFJFd0lnCkVPOWFRVExHa3JB
      U29MQnh4UzFFdUhxRkxLOFBsYkRvejlmTDg3cjNvU1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KIroILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4ekNDQXBxZ0F3SUJBZ0lVT01M
      MXk5bFRKNFJLby9NbUt3SkxJN1pWbks0d0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhN
      Q1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUkV3RHdZ
      RFZRUUtEQWhCZFdScGRHOXlNVEVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pFdGJtVjBNQjRY
      CkRUSXlNRGd3TmpFM016RXdNRm9YRFRJek1EZ3dOakUzTXpZd01Gb3dlakVMTUFrR0ExVUVCaE1D
      UTBneEdqQVkKQmdOVkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUkV3RHdZRFZRUUtFd2hC
      ZFdScGRHOXlNVEVmTUF3RwpBMVVFQ3hNRllXUnRhVzR3RHdZRFZRUUxFd2hoZFdScGRHOXlNVEVi
      TUJrR0ExVUVBd3dTUVdSdGFXNUFZWFZrCmFYUnZjakV0Ym1WME1Ga3dFd1lIS29aSXpqMENBUVlJ
      S29aSXpqMERBUWNEUWdBRVEzZUVOZFBWS3A0VFRoNHYKZHVIa0VxeTJrWVQ3bng0R2gwdThuZkZ1
      OC9xckY0ZXkyTGdldlBGZTdIaUYzZUxTWVZqcWx6bE1VeThxRzNEZQozMWMyaHFPQ0FSb3dnZ0VX
      TUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkCkRnUVdCQlQ2
      cnNQekxxUkxKN3VIOVVRS0d2b3N0TnFVSERBZkJnTlZIU01FR0RBV2dCUk5adm8zWjJKcmdYUVQK
      b2dHQlRFVDQrZWExclRBa0JnTlZIUkVFSFRBYmdobGpZUzEwYjI5c2N5MDJPR1ptTnpZMVpqazJM
      V2hzTm5aeQpNSUdQQmdncUF3UUZCZ2NJQVFTQmduc2lZWFIwY25NaU9uc2lZV0poWXk1cGJtbDBJ
      am9pZEhKMVpTSXNJbUZrCmJXbHVJam9pZEhKMVpTSXNJbWhtTGtGbVptbHNhV0YwYVc5dUlqb2lZ
      WFZrYVhSdmNqRWlMQ0pvWmk1RmJuSnYKYkd4dFpXNTBTVVFpT2lKQlpHMXBia0JoZFdScGRHOXlN
      UzF1WlhRaUxDSm9aaTVVZVhCbElqb2lZV1J0YVc0aQpmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdS
      QUlnRjdHeER0YnFzYm9rZGhLNzgzaTJUSE8vZnNrblJQZ3VOUHhBCjc2V2VhcU1DSUdEMGs2RUFV
      ZVdjdW90RXRWVGpSWDFFaDhIeDBpYzBObXdjMzc3Sk5PYW0KLS0tLS1FTkQgQ0VSVElGSUNBVEUt
      LS0tLQpCDgoEU0hBMhIGU0hBMjU2Su0FLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIv
      RENDQWFLZ0F3SUJBZ0lVRmxxaGV3eTFyNHliVjVvbFhEbjV2M0lrWmtZd0NnWUlLb1pJemowRUF3
      SXcKWERFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3
      d0dXblZ5YVdObwpNUkV3RHdZRFZRUUtEQWhCZFdScGRHOXlNVEVZTUJZR0ExVUVBd3dQWTJFdVlY
      VmthWFJ2Y2pFdGJtVjBNQjRYCkRUSXlNRGd3TmpFM01qa3hPRm9YRFRJMU1EVXlOakUzTWpreE9G
      b3dYREVMTUFrR0ExVUVCaE1DUTBneER6QU4KQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3
      d0dXblZ5YVdOb01SRXdEd1lEVlFRS0RBaEJkV1JwZEc5eQpNVEVZTUJZR0ExVUVBd3dQWTJFdVlY
      VmthWFJ2Y2pFdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBECkFRY0RRZ0FFaXdqMmhV
      K2tlOGRlZ2I3VUc5Q1dOMVJZaFU1ZWdoOXRrdTN3TkJuWlpSU2ExNXdkcnlzcDRZL2UKblhONXdv
      bllIcVVaUCtNYitGaStST0hUU1J3VEZxTkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdO
      VgpIUThCQWY4RUJBTUNBYVl3SFFZRFZSME9CQllFRkUxbStqZG5ZbXVCZEJPaUFZRk1SUGo1NXJX
      dE1Bb0dDQ3FHClNNNDlCQU1DQTBnQU1FVUNJUURNSy9RcThENkxSd2pZTElMd3FwR0E1aVk0NjBI
      MHNrVXdwTE5wR3M4UkV3SWcKRU85YVFUTEdrckFTb0xCeHhTMUV1SHFGTEs4UGxiRG96OWZMODdy
      M29TVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlucyI0CgdXcml0ZXJzEikSHwgB
      EhsSCBIGCAESAggAGg8SDQoLYXVkaXRvcjFNU1AaBkFkbWlucyI1CgZBZG1pbnMSKxIhCAESHRII
      EgYIARICCAAaERIPCgthdWRpdG9yMU1TUBABGgZBZG1pbnMiOAoLRW5kb3JzZW1lbnQSKRIfCAES
      GxIIEgYIARICCAAaDxINCgthdWRpdG9yMU1TUBoGQWRtaW5zIjQKB1JlYWRlcnMSKRIfCAESGxII
      EgYIARICCAAaDxINCgthdWRpdG9yMU1TUBoGQWRtaW5zKgZBZG1pbnMSzBYKC2F1ZGl0b3IyTVNQ
      ErwWGtQUCgNNU1ASzBQSwRQSvhQKC2F1ZGl0b3IyTVNQEu0FLS0tLS1CRUdJTiBDRVJUSUZJQ0FU
      RS0tLS0tCk1JSUIvVENDQWFLZ0F3SUJBZ0lVUEV0Nk9kNWZ2VVgzM1QxNUJ4Vk1FTzVqV2hvd0Nn
      WUlLb1pJemowRUF3SXcKWERFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJq
      RVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkV3RHdZRFZRUUtEQWhCZFdScGRHOXlNakVZTUJZR0Ex
      VUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJtVjBNQjRYCkRUSXlNRGd3TmpFM016QXpOVm9YRFRJMU1E
      VXlOakUzTXpBek5Wb3dYREVMTUFrR0ExVUVCaE1DUjBJeER6QU4KQmdOVkJBZ01Ca3h2Ym1SdmJq
      RVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SRXdEd1lEVlFRS0RBaEJkV1JwZEc5eQpNakVZTUJZR0Ex
      VUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBECkFR
      Y0RRZ0FFMXRYMTFEcGg1aXlJV21aRVFpSWtkbzA4VmRhV3RrUWQ3QjNsV2hrdGtvK1ZyS3M0K0tM
      ekFRQzUKQXh6TnArUU1DSTJkNjkyMVcva1JqTkxxZXgyUDBhTkNNRUF3RHdZRFZSMFRBUUgvQkFV
      d0F3RUIvekFPQmdOVgpIUThCQWY4RUJBTUNBYVl3SFFZRFZSME9CQllFRksvTVVaZWFJbTFXVExj
      SVQ0b1pBQ3VsRUxoTE1Bb0dDQ3FHClNNNDlCQU1DQTBrQU1FWUNJUUN6UkhQTDI3NkJPZExCT2Ra
      ZUlrYmhGRFdEbEN5b280T2VNdkJzNGlNZ25BSWgKQUtIcjZrNThDa0JtQ1U3ZWdhL0lUaXNkSmhm
      Ung3YTBaRFRNeThOQk92TU0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoivggtLS0tLUJFR0lO
      IENFUlRJRklDQVRFLS0tLS0KTUlJQzlUQ0NBcHVnQXdJQkFnSVVQbWZhclhlM01CQjVEck5oWlRy
      Y2dkWnRYZEl3Q2dZSUtvWkl6ajBFQXdJdwpYREVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn
      TUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SRXdEd1lEVlFRS0RBaEJkV1JwZEc5
      eU1qRVlNQllHQTFVRUF3d1BZMkV1WVhWa2FYUnZjakl0Ym1WME1CNFgKRFRJeU1EZ3dOakUzTXpN
      d01Gb1hEVEl6TURnd05qRTNNemd3TUZvd2V6RUxNQWtHQTFVRUJoTUNSMEl4R3pBWgpCZ05WQkFj
      VEVqVXhMalV3THkwd0xqRXpMMHh2Ym1SdmJqRVJNQThHQTFVRUNoTUlRWFZrYVhSdmNqSXhIekFN
      CkJnTlZCQXNUQldGa2JXbHVNQThHQTFVRUN4TUlZWFZrYVhSdmNqSXhHekFaQmdOVkJBTU1Fa0Zr
      YldsdVFHRjEKWkdsMGIzSXlMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElB
      Qk1NaWdLRVpVRnR3OGtOTwpxM1k4MnhFWXduckFyVDlud1BvQzFQUnJEQWR3aWFOYS9UMm43ZFlK
      SkdHbG52VEZuMnV4TkV3eENaS3l4bkRzCjVuMGcwS0NqZ2dFYU1JSUJGakFPQmdOVkhROEJBZjhF
      QkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlYKSFE0RUZnUVVvc2cyelVoL3h0VGZqQ3Nn
      eHJGQzduY0d4ZjR3SHdZRFZSMGpCQmd3Rm9BVXI4eFJsNW9pYlZaTQp0d2hQaWhrQUs2VVF1RXN3
      SkFZRFZSMFJCQjB3RzRJWlkyRXRkRzl2YkhNdE56WmtORGM0T0RRMk5DMDNiSGh1CllqQ0Jqd1lJ
      S2dNRUJRWUhDQUVFZ1lKN0ltRjBkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmgK
      WkcxcGJpSTZJblJ5ZFdVaUxDSm9aaTVCWm1acGJHbGhkR2x2YmlJNkltRjFaR2wwYjNJeUlpd2lh
      R1l1Ulc1eQpiMnhzYldWdWRFbEVJam9pUVdSdGFXNUFZWFZrYVhSdmNqSXRibVYwSWl3aWFHWXVW
      SGx3WlNJNkltRmtiV2x1CkluMTlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNucmZoZzFmQTRu
      d09HSEFHd3MwZTZlUi9UYjl4UEZqQU0KVHZkWHlVSk90QUlnTm40MS9mSEVoUy81WldpRDFKUzBL
      SnhEdUF3STBENEtJODR6WUpEM1BNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hB
      MhIGU0hBMjU2Su0FLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIvVENDQWFLZ0F3SUJB
      Z0lVUEV0Nk9kNWZ2VVgzM1QxNUJ4Vk1FTzVqV2hvd0NnWUlLb1pJemowRUF3SXcKWERFTE1Ba0dB
      MVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpN
      UkV3RHdZRFZRUUtEQWhCZFdScGRHOXlNakVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJt
      VjBNQjRYCkRUSXlNRGd3TmpFM016QXpOVm9YRFRJMU1EVXlOakUzTXpBek5Wb3dYREVMTUFrR0Ex
      VUVCaE1DUjBJeER6QU4KQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1S
      RXdEd1lEVlFRS0RBaEJkV1JwZEc5eQpNakVZTUJZR0ExVUVBd3dQWTJFdVlYVmthWFJ2Y2pJdGJt
      VjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBECkFRY0RRZ0FFMXRYMTFEcGg1aXlJV21aRVFp
      SWtkbzA4VmRhV3RrUWQ3QjNsV2hrdGtvK1ZyS3M0K0tMekFRQzUKQXh6TnArUU1DSTJkNjkyMVcv
      a1JqTkxxZXgyUDBhTkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVgpIUThCQWY4RUJB
      TUNBYVl3SFFZRFZSME9CQllFRksvTVVaZWFJbTFXVExjSVQ0b1pBQ3VsRUxoTE1Bb0dDQ3FHClNN
      NDlCQU1DQTBrQU1FWUNJUUN6UkhQTDI3NkJPZExCT2RaZUlrYmhGRFdEbEN5b280T2VNdkJzNGlN
      Z25BSWgKQUtIcjZrNThDa0JtQ1U3ZWdhL0lUaXNkSmhmUng3YTBaRFRNeThOQk92TU0KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlucyI0CgdSZWFkZXJzEikSHwgBEhsSCBIGCAESAggA
      Gg8SDQoLYXVkaXRvcjJNU1AaBkFkbWlucyI0CgdXcml0ZXJzEikSHwgBEhsSCBIGCAESAggAGg8S
      DQoLYXVkaXRvcjJNU1AaBkFkbWlucyI1CgZBZG1pbnMSKxIhCAESHRIIEgYIARICCAAaERIPCgth
      dWRpdG9yMk1TUBABGgZBZG1pbnMiOAoLRW5kb3JzZW1lbnQSKRIfCAESGxIIEgYIARICCAAaDxIN
      CgthdWRpdG9yMk1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicS
      DAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIv
      QWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9D
      aGFubmVsL09yZGVyZXIvQWRtaW5zGkoKEE9yZGVyZXJBZGRyZXNzZXMSNhIbChlvcmRlcmVyMS5v
      cmRlcmVyLW5ldDo3MDUwGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxokCgxDYXBhYmlsaXRpZXMS
      FBIKCggKBFYyXzASABoGQWRtaW5zGiYKEEhhc2hpbmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFk
      bWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhASBgj/////DxoGQWRtaW5zIiIKBkFk
      bWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy
      cxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaDgoE
      CgIKAAoACgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
